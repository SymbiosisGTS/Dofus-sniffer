// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: treasure_hunt.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt {

  /// <summary>Holder for reflection information generated from treasure_hunt.proto</summary>
  public static partial class TreasureHuntReflection {

    #region Descriptor
    /// <summary>File descriptor for treasure_hunt.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TreasureHuntReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN0cmVhc3VyZV9odW50LnByb3RvEjNjb20uYW5rYW1hLmRvZnVzLnNlcnZl",
            "ci5nYW1lLnByb3RvY29sLnRyZWFzdXJlLmh1bnQaDGNvbW1vbi5wcm90byI0",
            "ChxUcmVhc3VyZUh1bnRMZWdlbmRhcnlSZXF1ZXN0EhQKDGxlZ2VuZGFyeV9p",
            "ZBgBIAEoBSJzChZUcmVhc3VyZUh1bnREaWdSZXF1ZXN0ElkKCnF1ZXN0X3R5",
            "cGUYASABKA4yRS5jb20uYW5rYW1hLmRvZnVzLnNlcnZlci5nYW1lLnByb3Rv",
            "Y29sLnRyZWFzdXJlLmh1bnQuVHJlYXN1cmVIdW50VHlwZSKDAQoXVHJlYXN1",
            "cmVIdW50RmxhZ1JlcXVlc3QSWQoKcXVlc3RfdHlwZRgBIAEoDjJFLmNvbS5h",
            "bmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9jb2wudHJlYXN1cmUuaHVu",
            "dC5UcmVhc3VyZUh1bnRUeXBlEg0KBWluZGV4GAIgASgFIokBCh1UcmVhc3Vy",
            "ZUh1bnRGbGFnUmVtb3ZlUmVxdWVzdBJZCgpxdWVzdF90eXBlGAEgASgOMkUu",
            "Y29tLmFua2FtYS5kb2Z1cy5zZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVhc3Vy",
            "ZS5odW50LlRyZWFzdXJlSHVudFR5cGUSDQoFaW5kZXgYAiABKAUidgoZVHJl",
            "YXN1cmVIdW50R2l2ZVVwUmVxdWVzdBJZCgpxdWVzdF90eXBlGAEgASgOMkUu",
            "Y29tLmFua2FtYS5kb2Z1cy5zZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVhc3Vy",
            "ZS5odW50LlRyZWFzdXJlSHVudFR5cGUiJQoQUG9ydGFsVXNlUmVxdWVzdBIR",
            "Cglwb3J0YWxfaWQYASABKAUiPQoaVHJlYXN1cmVIdW50TGVnZW5kYXJ5RXZl",
            "bnQSHwoXYXZhaWxhYmxlX2xlZ2VuZGFyeV9pZHMYASADKAUi8gIKF1RyZWFz",
            "dXJlSHVudEFuc3dlckV2ZW50ElkKCnF1ZXN0X3R5cGUYASABKA4yRS5jb20u",
            "YW5rYW1hLmRvZnVzLnNlcnZlci5nYW1lLnByb3RvY29sLnRyZWFzdXJlLmh1",
            "bnQuVHJlYXN1cmVIdW50VHlwZRJjCgZyZXN1bHQYAiABKA4yUy5jb20uYW5r",
            "YW1hLmRvZnVzLnNlcnZlci5nYW1lLnByb3RvY29sLnRyZWFzdXJlLmh1bnQu",
            "VHJlYXN1cmVIdW50QW5zd2VyRXZlbnQuUmVzdWx0IpYBCgZSZXN1bHQSEwoP",
            "RVJST1JfVU5ERUZJTkVEEAASGAoURVJST1JfTk9fUVVFU1RfRk9VTkQQARIc",
            "ChhFUlJPUl9BTFJFQURZX0hBVkVfUVVFU1QQAhIXChNFUlJPUl9OT1RfQVZB",
            "SUxBQkxFEAMSHgoaRVJST1JfREFJTFlfTElNSVRfRVhDRUVERUQQBBIGCgJP",
            "SxAFIqUNChFUcmVhc3VyZUh1bnRFdmVudBJZCgpxdWVzdF90eXBlGAEgASgO",
            "MkUuY29tLmFua2FtYS5kb2Z1cy5zZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVh",
            "c3VyZS5odW50LlRyZWFzdXJlSHVudFR5cGUSFAoMc3RhcnRfbWFwX2lkGAIg",
            "ASgDEmwKC2tub3duX3N0ZXBzGAMgAygLMlcuY29tLmFua2FtYS5kb2Z1cy5z",
            "ZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVhc3VyZS5odW50LlRyZWFzdXJlSHVu",
            "dEV2ZW50LlRyZWFzdXJlSHVudFN0ZXASGAoQdG90YWxfc3RlcF9jb3VudBgE",
            "IAEoBRIbChNjdXJyZW50X2NoZWNrX3BvaW50GAUgASgFEhkKEXRvdGFsX2No",
            "ZWNrX3BvaW50GAYgASgFEh0KFWF2YWlsYWJsZV9yZXRyeV9jb3VudBgHIAEo",
            "BRJmCgVmbGFncxgIIAMoCzJXLmNvbS5hbmthbWEuZG9mdXMuc2VydmVyLmdh",
            "bWUucHJvdG9jb2wudHJlYXN1cmUuaHVudC5UcmVhc3VyZUh1bnRFdmVudC5U",
            "cmVhc3VyZUh1bnRGbGFnGpMIChBUcmVhc3VyZUh1bnRTdGVwEo8BChdmb2xs",
            "b3dfZGlyZWN0aW9uX3RvX3BvaRgBIAEoCzJsLmNvbS5hbmthbWEuZG9mdXMu",
            "c2VydmVyLmdhbWUucHJvdG9jb2wudHJlYXN1cmUuaHVudC5UcmVhc3VyZUh1",
            "bnRFdmVudC5UcmVhc3VyZUh1bnRTdGVwLkZvbGxvd0RpcmVjdGlvblRvUE9J",
            "SAASkQEKGGZvbGxvd19kaXJlY3Rpb25fdG9faGludBgCIAEoCzJtLmNvbS5h",
            "bmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9jb2wudHJlYXN1cmUuaHVu",
            "dC5UcmVhc3VyZUh1bnRFdmVudC5UcmVhc3VyZUh1bnRTdGVwLkZvbGxvd0Rp",
            "cmVjdGlvblRvSGludEgAEoMBChBmb2xsb3dfZGlyZWN0aW9uGAMgASgLMmcu",
            "Y29tLmFua2FtYS5kb2Z1cy5zZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVhc3Vy",
            "ZS5odW50LlRyZWFzdXJlSHVudEV2ZW50LlRyZWFzdXJlSHVudFN0ZXAuRm9s",
            "bG93RGlyZWN0aW9uSAASbgoFZmlnaHQYBCABKAsyXS5jb20uYW5rYW1hLmRv",
            "ZnVzLnNlcnZlci5nYW1lLnByb3RvY29sLnRyZWFzdXJlLmh1bnQuVHJlYXN1",
            "cmVIdW50RXZlbnQuVHJlYXN1cmVIdW50U3RlcC5GaWdodEgAEmoKA2RpZxgF",
            "IAEoCzJbLmNvbS5hbmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9jb2wu",
            "dHJlYXN1cmUuaHVudC5UcmVhc3VyZUh1bnRFdmVudC5UcmVhc3VyZUh1bnRT",
            "dGVwLkRpZ0gAGngKFEZvbGxvd0RpcmVjdGlvblRvUE9JEkoKCWRpcmVjdGlv",
            "bhgBIAEoDjI3LmNvbS5hbmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9j",
            "b2wuY29tbW9uLkRpcmVjdGlvbhIUCgxwb2lfbGFiZWxfaWQYAiABKAUacwoV",
            "Rm9sbG93RGlyZWN0aW9uVG9IaW50EkoKCWRpcmVjdGlvbhgBIAEoDjI3LmNv",
            "bS5hbmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9jb2wuY29tbW9uLkRp",
            "cmVjdGlvbhIOCgZucGNfaWQYAiABKAUacAoPRm9sbG93RGlyZWN0aW9uEkoK",
            "CWRpcmVjdGlvbhgBIAEoDjI3LmNvbS5hbmthbWEuZG9mdXMuc2VydmVyLmdh",
            "bWUucHJvdG9jb2wuY29tbW9uLkRpcmVjdGlvbhIRCgltYXBfY291bnQYAiAB",
            "KAUaBwoFRmlnaHQaBQoDRGlnQgYKBHN0ZXAawQEKEFRyZWFzdXJlSHVudEZs",
            "YWcSDgoGbWFwX2lkGAEgASgDEnAKBXN0YXRlGAIgASgOMmEuY29tLmFua2Ft",
            "YS5kb2Z1cy5zZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVhc3VyZS5odW50LlRy",
            "ZWFzdXJlSHVudEV2ZW50LlRyZWFzdXJlSHVudEZsYWcuRmxhZ1N0YXRlIisK",
            "CUZsYWdTdGF0ZRILCgdVTktOT1dOEAASBgoCT0sQARIJCgVXUk9ORxACInYK",
            "GVRyZWFzdXJlSHVudEZpbmlzaGVkRXZlbnQSWQoKcXVlc3RfdHlwZRgBIAEo",
            "DjJFLmNvbS5hbmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9jb2wudHJl",
            "YXN1cmUuaHVudC5UcmVhc3VyZUh1bnRUeXBlIpsDChpUcmVhc3VyZUh1bnRE",
            "aWdBbnN3ZXJFdmVudBJZCgpxdWVzdF90eXBlGAEgASgOMkUuY29tLmFua2Ft",
            "YS5kb2Z1cy5zZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVhc3VyZS5odW50LlRy",
            "ZWFzdXJlSHVudFR5cGUSaQoGcmVzdWx0GAIgASgOMlkuY29tLmFua2FtYS5k",
            "b2Z1cy5zZXJ2ZXIuZ2FtZS5wcm90b2NvbC50cmVhc3VyZS5odW50LlRyZWFz",
            "dXJlSHVudERpZ0Fuc3dlckV2ZW50LkRpZ1Jlc3VsdBIdChB3cm9uZ19mbGFn",
            "X2NvdW50GAMgASgFSACIAQEiggEKCURpZ1Jlc3VsdBITCg9FUlJPUl9VTkRF",
            "RklORUQQABIMCghORVdfSElOVBABEgwKCEZJTklTSEVEEAISCQoFV1JPTkcQ",
            "AxIICgRMT1NUEAQSFAoQRVJST1JfSU1QT1NTSUJMRRAFEhkKFVdST05HX0FO",
            "RF9ZT1VfS05PV19JVBAGQhMKEV93cm9uZ19mbGFnX2NvdW50Iu0CChtUcmVh",
            "c3VyZUh1bnRGbGFnQW5zd2VyRXZlbnQSWQoKcXVlc3RfdHlwZRgBIAEoDjJF",
            "LmNvbS5hbmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9jb2wudHJlYXN1",
            "cmUuaHVudC5UcmVhc3VyZUh1bnRUeXBlEmsKBnJlc3VsdBgCIAEoDjJbLmNv",
            "bS5hbmthbWEuZG9mdXMuc2VydmVyLmdhbWUucHJvdG9jb2wudHJlYXN1cmUu",
            "aHVudC5UcmVhc3VyZUh1bnRGbGFnQW5zd2VyRXZlbnQuRmxhZ1Jlc3VsdBIN",
            "CgVpbmRleBgDIAEoBSJ3CgpGbGFnUmVzdWx0EhMKD0VSUk9SX1VOREVGSU5F",
            "RBAAEgYKAk9LEAESCQoFV1JPTkcQAhIMCghUT09fTUFOWRADEhQKEEVSUk9S",
            "X0lNUE9TU0lCTEUQBBIPCgtXUk9OR19JTkRFWBAFEgwKCFNBTUVfTUFQEAYq",
            "OgoQVHJlYXN1cmVIdW50VHlwZRILCgdDTEFTU0lDEAASCgoGUE9SVEFMEAES",
            "DQoJTEVHRU5EQVJZEAJCD1oNcHJvdG9jb2wvZ2FtZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Ankama.Dofus.Server.Game.Protocol.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntLegendaryRequest), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntLegendaryRequest.Parser, new[]{ "LegendaryId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigRequest), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigRequest.Parser, new[]{ "QuestType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagRequest), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagRequest.Parser, new[]{ "QuestType", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagRemoveRequest), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagRemoveRequest.Parser, new[]{ "QuestType", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntGiveUpRequest), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntGiveUpRequest.Parser, new[]{ "QuestType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.PortalUseRequest), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.PortalUseRequest.Parser, new[]{ "PortalId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntLegendaryEvent), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntLegendaryEvent.Parser, new[]{ "AvailableLegendaryIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Parser, new[]{ "QuestType", "Result" }, null, new[]{ typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Parser, new[]{ "QuestType", "StartMapId", "KnownSteps", "TotalStepCount", "CurrentCheckPoint", "TotalCheckPoint", "AvailableRetryCount", "Flags" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Parser, new[]{ "FollowDirectionToPoi", "FollowDirectionToHint", "FollowDirection", "Fight", "Dig" }, new[]{ "Step" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI.Parser, new[]{ "Direction", "PoiLabelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint.Parser, new[]{ "Direction", "NpcId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection.Parser, new[]{ "Direction", "MapCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Parser, new[]{ "MapId", "State" }, null, new[]{ typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState) }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFinishedEvent), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFinishedEvent.Parser, new[]{ "QuestType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Parser, new[]{ "QuestType", "Result", "WrongFlagCount" }, new[]{ "WrongFlagCount" }, new[]{ typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent), global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Parser, new[]{ "QuestType", "Result", "Index" }, null, new[]{ typeof(global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult) }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TreasureHuntType {
    [pbr::OriginalName("CLASSIC")] Classic = 0,
    [pbr::OriginalName("PORTAL")] Portal = 1,
    [pbr::OriginalName("LEGENDARY")] Legendary = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntLegendaryRequest : pb::IMessage<TreasureHuntLegendaryRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntLegendaryRequest> _parser = new pb::MessageParser<TreasureHuntLegendaryRequest>(() => new TreasureHuntLegendaryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntLegendaryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntLegendaryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntLegendaryRequest(TreasureHuntLegendaryRequest other) : this() {
      legendaryId_ = other.legendaryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntLegendaryRequest Clone() {
      return new TreasureHuntLegendaryRequest(this);
    }

    /// <summary>Field number for the "legendary_id" field.</summary>
    public const int LegendaryIdFieldNumber = 1;
    private int legendaryId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LegendaryId {
      get { return legendaryId_; }
      set {
        legendaryId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntLegendaryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntLegendaryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LegendaryId != other.LegendaryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LegendaryId != 0) hash ^= LegendaryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LegendaryId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LegendaryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LegendaryId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LegendaryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LegendaryId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LegendaryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntLegendaryRequest other) {
      if (other == null) {
        return;
      }
      if (other.LegendaryId != 0) {
        LegendaryId = other.LegendaryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LegendaryId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LegendaryId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntDigRequest : pb::IMessage<TreasureHuntDigRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntDigRequest> _parser = new pb::MessageParser<TreasureHuntDigRequest>(() => new TreasureHuntDigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntDigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntDigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntDigRequest(TreasureHuntDigRequest other) : this() {
      questType_ = other.questType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntDigRequest Clone() {
      return new TreasureHuntDigRequest(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntDigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntDigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntDigRequest other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntFlagRequest : pb::IMessage<TreasureHuntFlagRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntFlagRequest> _parser = new pb::MessageParser<TreasureHuntFlagRequest>(() => new TreasureHuntFlagRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntFlagRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagRequest(TreasureHuntFlagRequest other) : this() {
      questType_ = other.questType_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagRequest Clone() {
      return new TreasureHuntFlagRequest(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntFlagRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntFlagRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntFlagRequest other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntFlagRemoveRequest : pb::IMessage<TreasureHuntFlagRemoveRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntFlagRemoveRequest> _parser = new pb::MessageParser<TreasureHuntFlagRemoveRequest>(() => new TreasureHuntFlagRemoveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntFlagRemoveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagRemoveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagRemoveRequest(TreasureHuntFlagRemoveRequest other) : this() {
      questType_ = other.questType_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagRemoveRequest Clone() {
      return new TreasureHuntFlagRemoveRequest(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntFlagRemoveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntFlagRemoveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntFlagRemoveRequest other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntGiveUpRequest : pb::IMessage<TreasureHuntGiveUpRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntGiveUpRequest> _parser = new pb::MessageParser<TreasureHuntGiveUpRequest>(() => new TreasureHuntGiveUpRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntGiveUpRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntGiveUpRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntGiveUpRequest(TreasureHuntGiveUpRequest other) : this() {
      questType_ = other.questType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntGiveUpRequest Clone() {
      return new TreasureHuntGiveUpRequest(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntGiveUpRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntGiveUpRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntGiveUpRequest other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PortalUseRequest : pb::IMessage<PortalUseRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PortalUseRequest> _parser = new pb::MessageParser<PortalUseRequest>(() => new PortalUseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PortalUseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortalUseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortalUseRequest(PortalUseRequest other) : this() {
      portalId_ = other.portalId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PortalUseRequest Clone() {
      return new PortalUseRequest(this);
    }

    /// <summary>Field number for the "portal_id" field.</summary>
    public const int PortalIdFieldNumber = 1;
    private int portalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PortalId {
      get { return portalId_; }
      set {
        portalId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PortalUseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PortalUseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PortalId != other.PortalId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PortalId != 0) hash ^= PortalId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PortalId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PortalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PortalId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PortalId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PortalId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PortalId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PortalUseRequest other) {
      if (other == null) {
        return;
      }
      if (other.PortalId != 0) {
        PortalId = other.PortalId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PortalId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PortalId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntLegendaryEvent : pb::IMessage<TreasureHuntLegendaryEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntLegendaryEvent> _parser = new pb::MessageParser<TreasureHuntLegendaryEvent>(() => new TreasureHuntLegendaryEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntLegendaryEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntLegendaryEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntLegendaryEvent(TreasureHuntLegendaryEvent other) : this() {
      availableLegendaryIds_ = other.availableLegendaryIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntLegendaryEvent Clone() {
      return new TreasureHuntLegendaryEvent(this);
    }

    /// <summary>Field number for the "available_legendary_ids" field.</summary>
    public const int AvailableLegendaryIdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_availableLegendaryIds_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> availableLegendaryIds_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> AvailableLegendaryIds {
      get { return availableLegendaryIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntLegendaryEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntLegendaryEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!availableLegendaryIds_.Equals(other.availableLegendaryIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= availableLegendaryIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      availableLegendaryIds_.WriteTo(output, _repeated_availableLegendaryIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      availableLegendaryIds_.WriteTo(ref output, _repeated_availableLegendaryIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += availableLegendaryIds_.CalculateSize(_repeated_availableLegendaryIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntLegendaryEvent other) {
      if (other == null) {
        return;
      }
      availableLegendaryIds_.Add(other.availableLegendaryIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            availableLegendaryIds_.AddEntriesFrom(input, _repeated_availableLegendaryIds_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            availableLegendaryIds_.AddEntriesFrom(ref input, _repeated_availableLegendaryIds_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntAnswerEvent : pb::IMessage<TreasureHuntAnswerEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntAnswerEvent> _parser = new pb::MessageParser<TreasureHuntAnswerEvent>(() => new TreasureHuntAnswerEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntAnswerEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntAnswerEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntAnswerEvent(TreasureHuntAnswerEvent other) : this() {
      questType_ = other.questType_;
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntAnswerEvent Clone() {
      return new TreasureHuntAnswerEvent(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result result_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result.ErrorUndefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntAnswerEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntAnswerEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result.ErrorUndefined) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result.ErrorUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result.ErrorUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result.ErrorUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntAnswerEvent other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      if (other.Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result.ErrorUndefined) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Result = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Result = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntAnswerEvent.Types.Result) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TreasureHuntAnswerEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("ERROR_UNDEFINED")] ErrorUndefined = 0,
        [pbr::OriginalName("ERROR_NO_QUEST_FOUND")] ErrorNoQuestFound = 1,
        [pbr::OriginalName("ERROR_ALREADY_HAVE_QUEST")] ErrorAlreadyHaveQuest = 2,
        [pbr::OriginalName("ERROR_NOT_AVAILABLE")] ErrorNotAvailable = 3,
        [pbr::OriginalName("ERROR_DAILY_LIMIT_EXCEEDED")] ErrorDailyLimitExceeded = 4,
        [pbr::OriginalName("OK")] Ok = 5,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntEvent : pb::IMessage<TreasureHuntEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntEvent> _parser = new pb::MessageParser<TreasureHuntEvent>(() => new TreasureHuntEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntEvent(TreasureHuntEvent other) : this() {
      questType_ = other.questType_;
      startMapId_ = other.startMapId_;
      knownSteps_ = other.knownSteps_.Clone();
      totalStepCount_ = other.totalStepCount_;
      currentCheckPoint_ = other.currentCheckPoint_;
      totalCheckPoint_ = other.totalCheckPoint_;
      availableRetryCount_ = other.availableRetryCount_;
      flags_ = other.flags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntEvent Clone() {
      return new TreasureHuntEvent(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    /// <summary>Field number for the "start_map_id" field.</summary>
    public const int StartMapIdFieldNumber = 2;
    private long startMapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartMapId {
      get { return startMapId_; }
      set {
        startMapId_ = value;
      }
    }

    /// <summary>Field number for the "known_steps" field.</summary>
    public const int KnownStepsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep> _repeated_knownSteps_codec
        = pb::FieldCodec.ForMessage(26, global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Parser);
    private readonly pbc::RepeatedField<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep> knownSteps_ = new pbc::RepeatedField<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep> KnownSteps {
      get { return knownSteps_; }
    }

    /// <summary>Field number for the "total_step_count" field.</summary>
    public const int TotalStepCountFieldNumber = 4;
    private int totalStepCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalStepCount {
      get { return totalStepCount_; }
      set {
        totalStepCount_ = value;
      }
    }

    /// <summary>Field number for the "current_check_point" field.</summary>
    public const int CurrentCheckPointFieldNumber = 5;
    private int currentCheckPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentCheckPoint {
      get { return currentCheckPoint_; }
      set {
        currentCheckPoint_ = value;
      }
    }

    /// <summary>Field number for the "total_check_point" field.</summary>
    public const int TotalCheckPointFieldNumber = 6;
    private int totalCheckPoint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TotalCheckPoint {
      get { return totalCheckPoint_; }
      set {
        totalCheckPoint_ = value;
      }
    }

    /// <summary>Field number for the "available_retry_count" field.</summary>
    public const int AvailableRetryCountFieldNumber = 7;
    private int availableRetryCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AvailableRetryCount {
      get { return availableRetryCount_; }
      set {
        availableRetryCount_ = value;
      }
    }

    /// <summary>Field number for the "flags" field.</summary>
    public const int FlagsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag> _repeated_flags_codec
        = pb::FieldCodec.ForMessage(66, global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Parser);
    private readonly pbc::RepeatedField<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag> flags_ = new pbc::RepeatedField<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag> Flags {
      get { return flags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      if (StartMapId != other.StartMapId) return false;
      if(!knownSteps_.Equals(other.knownSteps_)) return false;
      if (TotalStepCount != other.TotalStepCount) return false;
      if (CurrentCheckPoint != other.CurrentCheckPoint) return false;
      if (TotalCheckPoint != other.TotalCheckPoint) return false;
      if (AvailableRetryCount != other.AvailableRetryCount) return false;
      if(!flags_.Equals(other.flags_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (StartMapId != 0L) hash ^= StartMapId.GetHashCode();
      hash ^= knownSteps_.GetHashCode();
      if (TotalStepCount != 0) hash ^= TotalStepCount.GetHashCode();
      if (CurrentCheckPoint != 0) hash ^= CurrentCheckPoint.GetHashCode();
      if (TotalCheckPoint != 0) hash ^= TotalCheckPoint.GetHashCode();
      if (AvailableRetryCount != 0) hash ^= AvailableRetryCount.GetHashCode();
      hash ^= flags_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (StartMapId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartMapId);
      }
      knownSteps_.WriteTo(output, _repeated_knownSteps_codec);
      if (TotalStepCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalStepCount);
      }
      if (CurrentCheckPoint != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentCheckPoint);
      }
      if (TotalCheckPoint != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalCheckPoint);
      }
      if (AvailableRetryCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AvailableRetryCount);
      }
      flags_.WriteTo(output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (StartMapId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(StartMapId);
      }
      knownSteps_.WriteTo(ref output, _repeated_knownSteps_codec);
      if (TotalStepCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalStepCount);
      }
      if (CurrentCheckPoint != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(CurrentCheckPoint);
      }
      if (TotalCheckPoint != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalCheckPoint);
      }
      if (AvailableRetryCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AvailableRetryCount);
      }
      flags_.WriteTo(ref output, _repeated_flags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (StartMapId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartMapId);
      }
      size += knownSteps_.CalculateSize(_repeated_knownSteps_codec);
      if (TotalStepCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalStepCount);
      }
      if (CurrentCheckPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentCheckPoint);
      }
      if (TotalCheckPoint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalCheckPoint);
      }
      if (AvailableRetryCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailableRetryCount);
      }
      size += flags_.CalculateSize(_repeated_flags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntEvent other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      if (other.StartMapId != 0L) {
        StartMapId = other.StartMapId;
      }
      knownSteps_.Add(other.knownSteps_);
      if (other.TotalStepCount != 0) {
        TotalStepCount = other.TotalStepCount;
      }
      if (other.CurrentCheckPoint != 0) {
        CurrentCheckPoint = other.CurrentCheckPoint;
      }
      if (other.TotalCheckPoint != 0) {
        TotalCheckPoint = other.TotalCheckPoint;
      }
      if (other.AvailableRetryCount != 0) {
        AvailableRetryCount = other.AvailableRetryCount;
      }
      flags_.Add(other.flags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            StartMapId = input.ReadInt64();
            break;
          }
          case 26: {
            knownSteps_.AddEntriesFrom(input, _repeated_knownSteps_codec);
            break;
          }
          case 32: {
            TotalStepCount = input.ReadInt32();
            break;
          }
          case 40: {
            CurrentCheckPoint = input.ReadInt32();
            break;
          }
          case 48: {
            TotalCheckPoint = input.ReadInt32();
            break;
          }
          case 56: {
            AvailableRetryCount = input.ReadInt32();
            break;
          }
          case 66: {
            flags_.AddEntriesFrom(input, _repeated_flags_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            StartMapId = input.ReadInt64();
            break;
          }
          case 26: {
            knownSteps_.AddEntriesFrom(ref input, _repeated_knownSteps_codec);
            break;
          }
          case 32: {
            TotalStepCount = input.ReadInt32();
            break;
          }
          case 40: {
            CurrentCheckPoint = input.ReadInt32();
            break;
          }
          case 48: {
            TotalCheckPoint = input.ReadInt32();
            break;
          }
          case 56: {
            AvailableRetryCount = input.ReadInt32();
            break;
          }
          case 66: {
            flags_.AddEntriesFrom(ref input, _repeated_flags_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TreasureHuntEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TreasureHuntStep : pb::IMessage<TreasureHuntStep>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TreasureHuntStep> _parser = new pb::MessageParser<TreasureHuntStep>(() => new TreasureHuntStep());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TreasureHuntStep> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreasureHuntStep() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreasureHuntStep(TreasureHuntStep other) : this() {
          switch (other.StepCase) {
            case StepOneofCase.FollowDirectionToPoi:
              FollowDirectionToPoi = other.FollowDirectionToPoi.Clone();
              break;
            case StepOneofCase.FollowDirectionToHint:
              FollowDirectionToHint = other.FollowDirectionToHint.Clone();
              break;
            case StepOneofCase.FollowDirection:
              FollowDirection = other.FollowDirection.Clone();
              break;
            case StepOneofCase.Fight:
              Fight = other.Fight.Clone();
              break;
            case StepOneofCase.Dig:
              Dig = other.Dig.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreasureHuntStep Clone() {
          return new TreasureHuntStep(this);
        }

        /// <summary>Field number for the "follow_direction_to_poi" field.</summary>
        public const int FollowDirectionToPoiFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI FollowDirectionToPoi {
          get { return stepCase_ == StepOneofCase.FollowDirectionToPoi ? (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI) step_ : null; }
          set {
            step_ = value;
            stepCase_ = value == null ? StepOneofCase.None : StepOneofCase.FollowDirectionToPoi;
          }
        }

        /// <summary>Field number for the "follow_direction_to_hint" field.</summary>
        public const int FollowDirectionToHintFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint FollowDirectionToHint {
          get { return stepCase_ == StepOneofCase.FollowDirectionToHint ? (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint) step_ : null; }
          set {
            step_ = value;
            stepCase_ = value == null ? StepOneofCase.None : StepOneofCase.FollowDirectionToHint;
          }
        }

        /// <summary>Field number for the "follow_direction" field.</summary>
        public const int FollowDirectionFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection FollowDirection {
          get { return stepCase_ == StepOneofCase.FollowDirection ? (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection) step_ : null; }
          set {
            step_ = value;
            stepCase_ = value == null ? StepOneofCase.None : StepOneofCase.FollowDirection;
          }
        }

        /// <summary>Field number for the "fight" field.</summary>
        public const int FightFieldNumber = 4;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight Fight {
          get { return stepCase_ == StepOneofCase.Fight ? (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight) step_ : null; }
          set {
            step_ = value;
            stepCase_ = value == null ? StepOneofCase.None : StepOneofCase.Fight;
          }
        }

        /// <summary>Field number for the "dig" field.</summary>
        public const int DigFieldNumber = 5;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig Dig {
          get { return stepCase_ == StepOneofCase.Dig ? (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig) step_ : null; }
          set {
            step_ = value;
            stepCase_ = value == null ? StepOneofCase.None : StepOneofCase.Dig;
          }
        }

        private object step_;
        /// <summary>Enum of possible cases for the "step" oneof.</summary>
        public enum StepOneofCase {
          None = 0,
          FollowDirectionToPoi = 1,
          FollowDirectionToHint = 2,
          FollowDirection = 3,
          Fight = 4,
          Dig = 5,
        }
        private StepOneofCase stepCase_ = StepOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public StepOneofCase StepCase {
          get { return stepCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearStep() {
          stepCase_ = StepOneofCase.None;
          step_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TreasureHuntStep);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TreasureHuntStep other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(FollowDirectionToPoi, other.FollowDirectionToPoi)) return false;
          if (!object.Equals(FollowDirectionToHint, other.FollowDirectionToHint)) return false;
          if (!object.Equals(FollowDirection, other.FollowDirection)) return false;
          if (!object.Equals(Fight, other.Fight)) return false;
          if (!object.Equals(Dig, other.Dig)) return false;
          if (StepCase != other.StepCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (stepCase_ == StepOneofCase.FollowDirectionToPoi) hash ^= FollowDirectionToPoi.GetHashCode();
          if (stepCase_ == StepOneofCase.FollowDirectionToHint) hash ^= FollowDirectionToHint.GetHashCode();
          if (stepCase_ == StepOneofCase.FollowDirection) hash ^= FollowDirection.GetHashCode();
          if (stepCase_ == StepOneofCase.Fight) hash ^= Fight.GetHashCode();
          if (stepCase_ == StepOneofCase.Dig) hash ^= Dig.GetHashCode();
          hash ^= (int) stepCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (stepCase_ == StepOneofCase.FollowDirectionToPoi) {
            output.WriteRawTag(10);
            output.WriteMessage(FollowDirectionToPoi);
          }
          if (stepCase_ == StepOneofCase.FollowDirectionToHint) {
            output.WriteRawTag(18);
            output.WriteMessage(FollowDirectionToHint);
          }
          if (stepCase_ == StepOneofCase.FollowDirection) {
            output.WriteRawTag(26);
            output.WriteMessage(FollowDirection);
          }
          if (stepCase_ == StepOneofCase.Fight) {
            output.WriteRawTag(34);
            output.WriteMessage(Fight);
          }
          if (stepCase_ == StepOneofCase.Dig) {
            output.WriteRawTag(42);
            output.WriteMessage(Dig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (stepCase_ == StepOneofCase.FollowDirectionToPoi) {
            output.WriteRawTag(10);
            output.WriteMessage(FollowDirectionToPoi);
          }
          if (stepCase_ == StepOneofCase.FollowDirectionToHint) {
            output.WriteRawTag(18);
            output.WriteMessage(FollowDirectionToHint);
          }
          if (stepCase_ == StepOneofCase.FollowDirection) {
            output.WriteRawTag(26);
            output.WriteMessage(FollowDirection);
          }
          if (stepCase_ == StepOneofCase.Fight) {
            output.WriteRawTag(34);
            output.WriteMessage(Fight);
          }
          if (stepCase_ == StepOneofCase.Dig) {
            output.WriteRawTag(42);
            output.WriteMessage(Dig);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (stepCase_ == StepOneofCase.FollowDirectionToPoi) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FollowDirectionToPoi);
          }
          if (stepCase_ == StepOneofCase.FollowDirectionToHint) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FollowDirectionToHint);
          }
          if (stepCase_ == StepOneofCase.FollowDirection) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FollowDirection);
          }
          if (stepCase_ == StepOneofCase.Fight) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fight);
          }
          if (stepCase_ == StepOneofCase.Dig) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dig);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TreasureHuntStep other) {
          if (other == null) {
            return;
          }
          switch (other.StepCase) {
            case StepOneofCase.FollowDirectionToPoi:
              if (FollowDirectionToPoi == null) {
                FollowDirectionToPoi = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI();
              }
              FollowDirectionToPoi.MergeFrom(other.FollowDirectionToPoi);
              break;
            case StepOneofCase.FollowDirectionToHint:
              if (FollowDirectionToHint == null) {
                FollowDirectionToHint = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint();
              }
              FollowDirectionToHint.MergeFrom(other.FollowDirectionToHint);
              break;
            case StepOneofCase.FollowDirection:
              if (FollowDirection == null) {
                FollowDirection = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection();
              }
              FollowDirection.MergeFrom(other.FollowDirection);
              break;
            case StepOneofCase.Fight:
              if (Fight == null) {
                Fight = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight();
              }
              Fight.MergeFrom(other.Fight);
              break;
            case StepOneofCase.Dig:
              if (Dig == null) {
                Dig = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig();
              }
              Dig.MergeFrom(other.Dig);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI();
                if (stepCase_ == StepOneofCase.FollowDirectionToPoi) {
                  subBuilder.MergeFrom(FollowDirectionToPoi);
                }
                input.ReadMessage(subBuilder);
                FollowDirectionToPoi = subBuilder;
                break;
              }
              case 18: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint();
                if (stepCase_ == StepOneofCase.FollowDirectionToHint) {
                  subBuilder.MergeFrom(FollowDirectionToHint);
                }
                input.ReadMessage(subBuilder);
                FollowDirectionToHint = subBuilder;
                break;
              }
              case 26: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection();
                if (stepCase_ == StepOneofCase.FollowDirection) {
                  subBuilder.MergeFrom(FollowDirection);
                }
                input.ReadMessage(subBuilder);
                FollowDirection = subBuilder;
                break;
              }
              case 34: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight();
                if (stepCase_ == StepOneofCase.Fight) {
                  subBuilder.MergeFrom(Fight);
                }
                input.ReadMessage(subBuilder);
                Fight = subBuilder;
                break;
              }
              case 42: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig();
                if (stepCase_ == StepOneofCase.Dig) {
                  subBuilder.MergeFrom(Dig);
                }
                input.ReadMessage(subBuilder);
                Dig = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToPOI();
                if (stepCase_ == StepOneofCase.FollowDirectionToPoi) {
                  subBuilder.MergeFrom(FollowDirectionToPoi);
                }
                input.ReadMessage(subBuilder);
                FollowDirectionToPoi = subBuilder;
                break;
              }
              case 18: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirectionToHint();
                if (stepCase_ == StepOneofCase.FollowDirectionToHint) {
                  subBuilder.MergeFrom(FollowDirectionToHint);
                }
                input.ReadMessage(subBuilder);
                FollowDirectionToHint = subBuilder;
                break;
              }
              case 26: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.FollowDirection();
                if (stepCase_ == StepOneofCase.FollowDirection) {
                  subBuilder.MergeFrom(FollowDirection);
                }
                input.ReadMessage(subBuilder);
                FollowDirection = subBuilder;
                break;
              }
              case 34: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Fight();
                if (stepCase_ == StepOneofCase.Fight) {
                  subBuilder.MergeFrom(Fight);
                }
                input.ReadMessage(subBuilder);
                Fight = subBuilder;
                break;
              }
              case 42: {
                global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig subBuilder = new global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Types.Dig();
                if (stepCase_ == StepOneofCase.Dig) {
                  subBuilder.MergeFrom(Dig);
                }
                input.ReadMessage(subBuilder);
                Dig = subBuilder;
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TreasureHuntStep message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FollowDirectionToPOI : pb::IMessage<FollowDirectionToPOI>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FollowDirectionToPOI> _parser = new pb::MessageParser<FollowDirectionToPOI>(() => new FollowDirectionToPOI());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FollowDirectionToPOI> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirectionToPOI() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirectionToPOI(FollowDirectionToPOI other) : this() {
              direction_ = other.direction_;
              poiLabelId_ = other.poiLabelId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirectionToPOI Clone() {
              return new FollowDirectionToPOI(this);
            }

            /// <summary>Field number for the "direction" field.</summary>
            public const int DirectionFieldNumber = 1;
            private global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction direction_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction Direction {
              get { return direction_; }
              set {
                direction_ = value;
              }
            }

            /// <summary>Field number for the "poi_label_id" field.</summary>
            public const int PoiLabelIdFieldNumber = 2;
            private int poiLabelId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int PoiLabelId {
              get { return poiLabelId_; }
              set {
                poiLabelId_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FollowDirectionToPOI);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FollowDirectionToPOI other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Direction != other.Direction) return false;
              if (PoiLabelId != other.PoiLabelId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) hash ^= Direction.GetHashCode();
              if (PoiLabelId != 0) hash ^= PoiLabelId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Direction);
              }
              if (PoiLabelId != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(PoiLabelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Direction);
              }
              if (PoiLabelId != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(PoiLabelId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
              }
              if (PoiLabelId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PoiLabelId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FollowDirectionToPOI other) {
              if (other == null) {
                return;
              }
              if (other.Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                Direction = other.Direction;
              }
              if (other.PoiLabelId != 0) {
                PoiLabelId = other.PoiLabelId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Direction = (global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    PoiLabelId = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Direction = (global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    PoiLabelId = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FollowDirectionToHint : pb::IMessage<FollowDirectionToHint>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FollowDirectionToHint> _parser = new pb::MessageParser<FollowDirectionToHint>(() => new FollowDirectionToHint());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FollowDirectionToHint> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirectionToHint() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirectionToHint(FollowDirectionToHint other) : this() {
              direction_ = other.direction_;
              npcId_ = other.npcId_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirectionToHint Clone() {
              return new FollowDirectionToHint(this);
            }

            /// <summary>Field number for the "direction" field.</summary>
            public const int DirectionFieldNumber = 1;
            private global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction direction_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction Direction {
              get { return direction_; }
              set {
                direction_ = value;
              }
            }

            /// <summary>Field number for the "npc_id" field.</summary>
            public const int NpcIdFieldNumber = 2;
            private int npcId_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int NpcId {
              get { return npcId_; }
              set {
                npcId_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FollowDirectionToHint);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FollowDirectionToHint other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Direction != other.Direction) return false;
              if (NpcId != other.NpcId) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) hash ^= Direction.GetHashCode();
              if (NpcId != 0) hash ^= NpcId.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Direction);
              }
              if (NpcId != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(NpcId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Direction);
              }
              if (NpcId != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(NpcId);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
              }
              if (NpcId != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(NpcId);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FollowDirectionToHint other) {
              if (other == null) {
                return;
              }
              if (other.Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                Direction = other.Direction;
              }
              if (other.NpcId != 0) {
                NpcId = other.NpcId;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Direction = (global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    NpcId = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Direction = (global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    NpcId = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class FollowDirection : pb::IMessage<FollowDirection>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FollowDirection> _parser = new pb::MessageParser<FollowDirection>(() => new FollowDirection());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<FollowDirection> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirection() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirection(FollowDirection other) : this() {
              direction_ = other.direction_;
              mapCount_ = other.mapCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public FollowDirection Clone() {
              return new FollowDirection(this);
            }

            /// <summary>Field number for the "direction" field.</summary>
            public const int DirectionFieldNumber = 1;
            private global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction direction_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction Direction {
              get { return direction_; }
              set {
                direction_ = value;
              }
            }

            /// <summary>Field number for the "map_count" field.</summary>
            public const int MapCountFieldNumber = 2;
            private int mapCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int MapCount {
              get { return mapCount_; }
              set {
                mapCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as FollowDirection);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(FollowDirection other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Direction != other.Direction) return false;
              if (MapCount != other.MapCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) hash ^= Direction.GetHashCode();
              if (MapCount != 0) hash ^= MapCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Direction);
              }
              if (MapCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MapCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                output.WriteRawTag(8);
                output.WriteEnum((int) Direction);
              }
              if (MapCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(MapCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
              }
              if (MapCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(FollowDirection other) {
              if (other == null) {
                return;
              }
              if (other.Direction != global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction.East) {
                Direction = other.Direction;
              }
              if (other.MapCount != 0) {
                MapCount = other.MapCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Direction = (global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    MapCount = input.ReadInt32();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 8: {
                    Direction = (global::Com.Ankama.Dofus.Server.Game.Protocol.Common.Direction) input.ReadEnum();
                    break;
                  }
                  case 16: {
                    MapCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }
            #endif

          }

          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Fight : pb::IMessage<Fight>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Fight> _parser = new pb::MessageParser<Fight>(() => new Fight());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Fight> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Fight() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Fight(Fight other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Fight Clone() {
              return new Fight(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Fight);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Fight other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Fight other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

          [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
          public sealed partial class Dig : pb::IMessage<Dig>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Dig> _parser = new pb::MessageParser<Dig>(() => new Dig());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pb::MessageParser<Dig> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntStep.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Dig() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Dig(Dig other) : this() {
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public Dig Clone() {
              return new Dig(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override bool Equals(object other) {
              return Equals(other as Dig);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public bool Equals(Dig other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override int GetHashCode() {
              int hash = 1;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public int CalculateSize() {
              int size = 0;
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(Dig other) {
              if (other == null) {
                return;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
              if ((tag & 7) == 4) {
                // Abort on any end group tag.
                return;
              }
              switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TreasureHuntFlag : pb::IMessage<TreasureHuntFlag>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TreasureHuntFlag> _parser = new pb::MessageParser<TreasureHuntFlag>(() => new TreasureHuntFlag());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TreasureHuntFlag> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreasureHuntFlag() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreasureHuntFlag(TreasureHuntFlag other) : this() {
          mapId_ = other.mapId_;
          state_ = other.state_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TreasureHuntFlag Clone() {
          return new TreasureHuntFlag(this);
        }

        /// <summary>Field number for the "map_id" field.</summary>
        public const int MapIdFieldNumber = 1;
        private long mapId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public long MapId {
          get { return mapId_; }
          set {
            mapId_ = value;
          }
        }

        /// <summary>Field number for the "state" field.</summary>
        public const int StateFieldNumber = 2;
        private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState state_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState State {
          get { return state_; }
          set {
            state_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TreasureHuntFlag);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TreasureHuntFlag other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MapId != other.MapId) return false;
          if (State != other.State) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (MapId != 0L) hash ^= MapId.GetHashCode();
          if (State != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState.Unknown) hash ^= State.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MapId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MapId);
          }
          if (State != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState.Unknown) {
            output.WriteRawTag(16);
            output.WriteEnum((int) State);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MapId != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(MapId);
          }
          if (State != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState.Unknown) {
            output.WriteRawTag(16);
            output.WriteEnum((int) State);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (MapId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(MapId);
          }
          if (State != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TreasureHuntFlag other) {
          if (other == null) {
            return;
          }
          if (other.MapId != 0L) {
            MapId = other.MapId;
          }
          if (other.State != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState.Unknown) {
            State = other.State;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                MapId = input.ReadInt64();
                break;
              }
              case 16: {
                State = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
          if ((tag & 7) == 4) {
            // Abort on any end group tag.
            return;
          }
          switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                MapId = input.ReadInt64();
                break;
              }
              case 16: {
                State = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntEvent.Types.TreasureHuntFlag.Types.FlagState) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the TreasureHuntFlag message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static partial class Types {
          public enum FlagState {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("OK")] Ok = 1,
            [pbr::OriginalName("WRONG")] Wrong = 2,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntFinishedEvent : pb::IMessage<TreasureHuntFinishedEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntFinishedEvent> _parser = new pb::MessageParser<TreasureHuntFinishedEvent>(() => new TreasureHuntFinishedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntFinishedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFinishedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFinishedEvent(TreasureHuntFinishedEvent other) : this() {
      questType_ = other.questType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFinishedEvent Clone() {
      return new TreasureHuntFinishedEvent(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntFinishedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntFinishedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntFinishedEvent other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntDigAnswerEvent : pb::IMessage<TreasureHuntDigAnswerEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntDigAnswerEvent> _parser = new pb::MessageParser<TreasureHuntDigAnswerEvent>(() => new TreasureHuntDigAnswerEvent());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntDigAnswerEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntDigAnswerEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntDigAnswerEvent(TreasureHuntDigAnswerEvent other) : this() {
      _hasBits0 = other._hasBits0;
      questType_ = other.questType_;
      result_ = other.result_;
      wrongFlagCount_ = other.wrongFlagCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntDigAnswerEvent Clone() {
      return new TreasureHuntDigAnswerEvent(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult result_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult.ErrorUndefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "wrong_flag_count" field.</summary>
    public const int WrongFlagCountFieldNumber = 3;
    private readonly static int WrongFlagCountDefaultValue = 0;

    private int wrongFlagCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int WrongFlagCount {
      get { if ((_hasBits0 & 1) != 0) { return wrongFlagCount_; } else { return WrongFlagCountDefaultValue; } }
      set {
        _hasBits0 |= 1;
        wrongFlagCount_ = value;
      }
    }
    /// <summary>Gets whether the "wrong_flag_count" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasWrongFlagCount {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "wrong_flag_count" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearWrongFlagCount() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntDigAnswerEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntDigAnswerEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      if (Result != other.Result) return false;
      if (WrongFlagCount != other.WrongFlagCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult.ErrorUndefined) hash ^= Result.GetHashCode();
      if (HasWrongFlagCount) hash ^= WrongFlagCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult.ErrorUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasWrongFlagCount) {
        output.WriteRawTag(24);
        output.WriteInt32(WrongFlagCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult.ErrorUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (HasWrongFlagCount) {
        output.WriteRawTag(24);
        output.WriteInt32(WrongFlagCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult.ErrorUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (HasWrongFlagCount) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WrongFlagCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntDigAnswerEvent other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      if (other.Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult.ErrorUndefined) {
        Result = other.Result;
      }
      if (other.HasWrongFlagCount) {
        WrongFlagCount = other.WrongFlagCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Result = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult) input.ReadEnum();
            break;
          }
          case 24: {
            WrongFlagCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Result = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntDigAnswerEvent.Types.DigResult) input.ReadEnum();
            break;
          }
          case 24: {
            WrongFlagCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TreasureHuntDigAnswerEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum DigResult {
        [pbr::OriginalName("ERROR_UNDEFINED")] ErrorUndefined = 0,
        [pbr::OriginalName("NEW_HINT")] NewHint = 1,
        [pbr::OriginalName("FINISHED")] Finished = 2,
        [pbr::OriginalName("WRONG")] Wrong = 3,
        [pbr::OriginalName("LOST")] Lost = 4,
        [pbr::OriginalName("ERROR_IMPOSSIBLE")] ErrorImpossible = 5,
        [pbr::OriginalName("WRONG_AND_YOU_KNOW_IT")] WrongAndYouKnowIt = 6,
      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TreasureHuntFlagAnswerEvent : pb::IMessage<TreasureHuntFlagAnswerEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TreasureHuntFlagAnswerEvent> _parser = new pb::MessageParser<TreasureHuntFlagAnswerEvent>(() => new TreasureHuntFlagAnswerEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TreasureHuntFlagAnswerEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagAnswerEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagAnswerEvent(TreasureHuntFlagAnswerEvent other) : this() {
      questType_ = other.questType_;
      result_ = other.result_;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TreasureHuntFlagAnswerEvent Clone() {
      return new TreasureHuntFlagAnswerEvent(this);
    }

    /// <summary>Field number for the "quest_type" field.</summary>
    public const int QuestTypeFieldNumber = 1;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType questType_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType QuestType {
      get { return questType_; }
      set {
        questType_ = value;
      }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 2;
    private global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult result_ = global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult.ErrorUndefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TreasureHuntFlagAnswerEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TreasureHuntFlagAnswerEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestType != other.QuestType) return false;
      if (Result != other.Result) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) hash ^= QuestType.GetHashCode();
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult.ErrorUndefined) hash ^= Result.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult.ErrorUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        output.WriteRawTag(8);
        output.WriteEnum((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult.ErrorUndefined) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Result);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) QuestType);
      }
      if (Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult.ErrorUndefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TreasureHuntFlagAnswerEvent other) {
      if (other == null) {
        return;
      }
      if (other.QuestType != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType.Classic) {
        QuestType = other.QuestType;
      }
      if (other.Result != global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult.ErrorUndefined) {
        Result = other.Result;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Result = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult) input.ReadEnum();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            QuestType = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntType) input.ReadEnum();
            break;
          }
          case 16: {
            Result = (global::Com.Ankama.Dofus.Server.Game.Protocol.Treasure.Hunt.TreasureHuntFlagAnswerEvent.Types.FlagResult) input.ReadEnum();
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TreasureHuntFlagAnswerEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum FlagResult {
        [pbr::OriginalName("ERROR_UNDEFINED")] ErrorUndefined = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("WRONG")] Wrong = 2,
        [pbr::OriginalName("TOO_MANY")] TooMany = 3,
        [pbr::OriginalName("ERROR_IMPOSSIBLE")] ErrorImpossible = 4,
        [pbr::OriginalName("WRONG_INDEX")] WrongIndex = 5,
        [pbr::OriginalName("SAME_MAP")] SameMap = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
